name: CI/CD Pipeline for app-82263855

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 저장소 코드 체크아웃
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Java 환경 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Maven 빌드
    - name: Build with Maven
      run: ./mvnw clean package

    # 4. 빌드 컨텍스트 디버깅
    - name: Debug Build Context
      run: |
        echo "Listing files in current directory..."
        ls -la
        echo "Checking .mvn directory..."
        ls -la .mvn
        echo "Checking .mvn/wrapper directory..."
        ls -la .mvn/wrapper

    # 5. Base ACR 로그인
    - name: Login to Base ACR
      run: |
        echo "${{ secrets.BASEACR_PASSWORD }}" | docker login ${{ secrets.BASEACR_LOGIN_SERVER }} -u "${{ secrets.BASEACR_USERNAME }}" --password-stdin

    # 6. Base ACR에서 OpenJDK 17-slim 이미지 가져오기
    - name: Pull Base OpenJDK Image
      run: docker pull ${{ secrets.BASEACR_LOGIN_SERVER }}/docker.io/openjdk:17-slim

    # 7. CI/CD ACR 로그인
    - name: Login to CI/CD ACR
      run: |
        echo "${{ secrets.CIACR_PASSWORD }}" | docker login ${{ secrets.CIACR_LOGIN_SERVER }} -u "${{ secrets.CIACR_USERNAME }}" --password-stdin

    # 8. Docker 이미지 빌드 및 푸시
    - name: Build and Push Docker Image
      run: |
        docker build --no-cache -t ${{ secrets.CIACR_LOGIN_SERVER }}/app-82263855:latest .
        docker push ${{ secrets.CIACR_LOGIN_SERVER }}/app-82263855:latest
